{"ast":null,"code":"import React from 'react';\nimport { FileUploadButton, ImageDropzone } from 'react-file-utils';\nimport { EmojiPicker } from './EmojiPicker';\nimport { CooldownTimer as DefaultCooldownTimer } from './hooks/useCooldownTimer';\nimport { EmojiIconSmall as DefaultEmojiIcon, FileUploadIconFlat as DefaultFileUploadIcon, SendButton as DefaultSendButton } from './icons';\nimport { UploadsPreview } from './UploadsPreview';\nimport { ChatAutoComplete } from '../ChatAutoComplete/ChatAutoComplete';\nimport { Tooltip } from '../Tooltip/Tooltip';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { useMessageInputContext } from '../../context/MessageInputContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { QuotedMessagePreview as DefaultQuotedMessagePreview } from './QuotedMessagePreview';\nexport var MessageInputSmall = function () {\n  var _a = useChannelStateContext('MessageInputSmall'),\n      acceptedFiles = _a.acceptedFiles,\n      multipleUploads = _a.multipleUploads,\n      quotedMessage = _a.quotedMessage;\n\n  var t = useTranslationContext('MessageInputSmall').t;\n\n  var _b = useMessageInputContext('MessageInputSmall'),\n      closeEmojiPicker = _b.closeEmojiPicker,\n      cooldownInterval = _b.cooldownInterval,\n      cooldownRemaining = _b.cooldownRemaining,\n      emojiPickerIsOpen = _b.emojiPickerIsOpen,\n      handleSubmit = _b.handleSubmit,\n      isUploadEnabled = _b.isUploadEnabled,\n      maxFilesLeft = _b.maxFilesLeft,\n      numberOfUploads = _b.numberOfUploads,\n      openEmojiPicker = _b.openEmojiPicker,\n      setCooldownRemaining = _b.setCooldownRemaining,\n      uploadNewFiles = _b.uploadNewFiles;\n\n  var _c = useComponentContext('MessageInputSmall'),\n      _d = _c.CooldownTimer,\n      CooldownTimer = _d === void 0 ? DefaultCooldownTimer : _d,\n      _e = _c.EmojiIcon,\n      EmojiIcon = _e === void 0 ? DefaultEmojiIcon : _e,\n      _f = _c.FileUploadIcon,\n      FileUploadIcon = _f === void 0 ? DefaultFileUploadIcon : _f,\n      _g = _c.SendButton,\n      SendButton = _g === void 0 ? DefaultSendButton : _g,\n      _h = _c.QuotedMessagePreview,\n      QuotedMessagePreview = _h === void 0 ? DefaultQuotedMessagePreview : _h;\n\n  return React.createElement(\"div\", {\n    className: 'str-chat__small-message-input__wrapper'\n  }, React.createElement(ImageDropzone, {\n    accept: acceptedFiles,\n    disabled: !isUploadEnabled || maxFilesLeft === 0 || !!cooldownRemaining,\n    handleFiles: uploadNewFiles,\n    maxNumberOfFiles: maxFilesLeft,\n    multiple: multipleUploads\n  }, React.createElement(\"div\", {\n    className: \"str-chat__small-message-input \" + (SendButton ? 'str-chat__small-message-input--send-button-active' : '') + \" \" + (quotedMessage && quotedMessage.parent_id ? 'str-chat__input-flat-quoted' : '') + \" \" + (numberOfUploads ? 'str-chat__small-message-input-has-attachments' : '') + \" \"\n  }, quotedMessage && quotedMessage.parent_id && React.createElement(QuotedMessagePreview, {\n    quotedMessage: quotedMessage\n  }), React.createElement(\"div\", {\n    className: 'str-chat__small-message-input--textarea-wrapper'\n  }, isUploadEnabled && React.createElement(UploadsPreview, null), React.createElement(ChatAutoComplete, null), cooldownRemaining ? React.createElement(\"div\", {\n    className: 'str-chat__input-small-cooldown'\n  }, React.createElement(CooldownTimer, {\n    cooldownInterval: cooldownInterval,\n    setCooldownRemaining: setCooldownRemaining\n  })) : React.createElement(React.Fragment, null, isUploadEnabled && React.createElement(\"div\", {\n    className: 'str-chat__fileupload-wrapper',\n    \"data-testid\": 'fileinput'\n  }, React.createElement(Tooltip, null, maxFilesLeft ? t('Attach files') : t(\"You've reached the maximum number of files\")), React.createElement(FileUploadButton, {\n    accepts: acceptedFiles,\n    disabled: maxFilesLeft === 0,\n    handleFiles: uploadNewFiles,\n    multiple: multipleUploads\n  }, React.createElement(\"span\", {\n    className: 'str-chat__small-message-input-fileupload'\n  }, React.createElement(FileUploadIcon, null)))), React.createElement(\"div\", {\n    className: 'str-chat__emojiselect-wrapper'\n  }, React.createElement(Tooltip, null, emojiPickerIsOpen ? t('Close emoji picker') : t('Open emoji picker')), React.createElement(\"button\", {\n    \"aria-label\": 'Emoji picker',\n    className: 'str-chat__small-message-input-emojiselect',\n    onClick: emojiPickerIsOpen ? closeEmojiPicker : openEmojiPicker\n  }, React.createElement(EmojiIcon, null)))), React.createElement(EmojiPicker, {\n    small: true\n  })), !cooldownRemaining && React.createElement(SendButton, {\n    sendMessage: handleSubmit\n  }))));\n};","map":{"version":3,"sources":["/workspace/Texter/client/node_modules/stream-chat-react/dist/components/MessageInput/MessageInputSmall.js"],"names":["React","FileUploadButton","ImageDropzone","EmojiPicker","CooldownTimer","DefaultCooldownTimer","EmojiIconSmall","DefaultEmojiIcon","FileUploadIconFlat","DefaultFileUploadIcon","SendButton","DefaultSendButton","UploadsPreview","ChatAutoComplete","Tooltip","useChannelStateContext","useTranslationContext","useMessageInputContext","useComponentContext","QuotedMessagePreview","DefaultQuotedMessagePreview","MessageInputSmall","_a","acceptedFiles","multipleUploads","quotedMessage","t","_b","closeEmojiPicker","cooldownInterval","cooldownRemaining","emojiPickerIsOpen","handleSubmit","isUploadEnabled","maxFilesLeft","numberOfUploads","openEmojiPicker","setCooldownRemaining","uploadNewFiles","_c","_d","_e","EmojiIcon","_f","FileUploadIcon","_g","_h","createElement","className","accept","disabled","handleFiles","maxNumberOfFiles","multiple","parent_id","Fragment","accepts","onClick","small","sendMessage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FileUploadButton, ImageDropzone } from 'react-file-utils';\nimport { EmojiPicker } from './EmojiPicker';\nimport { CooldownTimer as DefaultCooldownTimer } from './hooks/useCooldownTimer';\nimport { EmojiIconSmall as DefaultEmojiIcon, FileUploadIconFlat as DefaultFileUploadIcon, SendButton as DefaultSendButton, } from './icons';\nimport { UploadsPreview } from './UploadsPreview';\nimport { ChatAutoComplete } from '../ChatAutoComplete/ChatAutoComplete';\nimport { Tooltip } from '../Tooltip/Tooltip';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { useMessageInputContext } from '../../context/MessageInputContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { QuotedMessagePreview as DefaultQuotedMessagePreview } from './QuotedMessagePreview';\nexport var MessageInputSmall = function () {\n    var _a = useChannelStateContext('MessageInputSmall'), acceptedFiles = _a.acceptedFiles, multipleUploads = _a.multipleUploads, quotedMessage = _a.quotedMessage;\n    var t = useTranslationContext('MessageInputSmall').t;\n    var _b = useMessageInputContext('MessageInputSmall'), closeEmojiPicker = _b.closeEmojiPicker, cooldownInterval = _b.cooldownInterval, cooldownRemaining = _b.cooldownRemaining, emojiPickerIsOpen = _b.emojiPickerIsOpen, handleSubmit = _b.handleSubmit, isUploadEnabled = _b.isUploadEnabled, maxFilesLeft = _b.maxFilesLeft, numberOfUploads = _b.numberOfUploads, openEmojiPicker = _b.openEmojiPicker, setCooldownRemaining = _b.setCooldownRemaining, uploadNewFiles = _b.uploadNewFiles;\n    var _c = useComponentContext('MessageInputSmall'), _d = _c.CooldownTimer, CooldownTimer = _d === void 0 ? DefaultCooldownTimer : _d, _e = _c.EmojiIcon, EmojiIcon = _e === void 0 ? DefaultEmojiIcon : _e, _f = _c.FileUploadIcon, FileUploadIcon = _f === void 0 ? DefaultFileUploadIcon : _f, _g = _c.SendButton, SendButton = _g === void 0 ? DefaultSendButton : _g, _h = _c.QuotedMessagePreview, QuotedMessagePreview = _h === void 0 ? DefaultQuotedMessagePreview : _h;\n    return (React.createElement(\"div\", { className: 'str-chat__small-message-input__wrapper' },\n        React.createElement(ImageDropzone, { accept: acceptedFiles, disabled: !isUploadEnabled || maxFilesLeft === 0 || !!cooldownRemaining, handleFiles: uploadNewFiles, maxNumberOfFiles: maxFilesLeft, multiple: multipleUploads },\n            React.createElement(\"div\", { className: \"str-chat__small-message-input \" + (SendButton ? 'str-chat__small-message-input--send-button-active' : '') + \" \" + (quotedMessage && quotedMessage.parent_id ? 'str-chat__input-flat-quoted' : '') + \" \" + (numberOfUploads ? 'str-chat__small-message-input-has-attachments' : '') + \" \" },\n                quotedMessage && quotedMessage.parent_id && (React.createElement(QuotedMessagePreview, { quotedMessage: quotedMessage })),\n                React.createElement(\"div\", { className: 'str-chat__small-message-input--textarea-wrapper' },\n                    isUploadEnabled && React.createElement(UploadsPreview, null),\n                    React.createElement(ChatAutoComplete, null),\n                    cooldownRemaining ? (React.createElement(\"div\", { className: 'str-chat__input-small-cooldown' },\n                        React.createElement(CooldownTimer, { cooldownInterval: cooldownInterval, setCooldownRemaining: setCooldownRemaining }))) : (React.createElement(React.Fragment, null,\n                        isUploadEnabled && (React.createElement(\"div\", { className: 'str-chat__fileupload-wrapper', \"data-testid\": 'fileinput' },\n                            React.createElement(Tooltip, null, maxFilesLeft\n                                ? t('Attach files')\n                                : t(\"You've reached the maximum number of files\")),\n                            React.createElement(FileUploadButton, { accepts: acceptedFiles, disabled: maxFilesLeft === 0, handleFiles: uploadNewFiles, multiple: multipleUploads },\n                                React.createElement(\"span\", { className: 'str-chat__small-message-input-fileupload' },\n                                    React.createElement(FileUploadIcon, null))))),\n                        React.createElement(\"div\", { className: 'str-chat__emojiselect-wrapper' },\n                            React.createElement(Tooltip, null, emojiPickerIsOpen ? t('Close emoji picker') : t('Open emoji picker')),\n                            React.createElement(\"button\", { \"aria-label\": 'Emoji picker', className: 'str-chat__small-message-input-emojiselect', onClick: emojiPickerIsOpen ? closeEmojiPicker : openEmojiPicker },\n                                React.createElement(EmojiIcon, null))))),\n                    React.createElement(EmojiPicker, { small: true })),\n                !cooldownRemaining && React.createElement(SendButton, { sendMessage: handleSubmit })))));\n};\n"]},"metadata":{},"sourceType":"module"}