{"ast":null,"code":"var _jsxFileName = \"/workspace/Texter/client/src/components/ChannelContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useChatContext } from 'stream-chat-react';\nimport { ChannelInner, CreateChannel, EditChannel, TeamMessage } from './';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChannelContainer = _ref => {\n  _s();\n\n  let {\n    isCreating,\n    setIsCreating,\n    isEditing,\n    setIsEditing,\n    createType\n  } = _ref;\n  const {\n    channel\n  } = useChatContext();\n\n  if (isCreating) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel__container\",\n      children: /*#__PURE__*/_jsxDEV(CreateChannel, {\n        createType: createType,\n        setIsCreating: setIsCreating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (isEditing) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel__container\",\n      children: /*#__PURE__*/_jsxDEV(EditChannel, {\n        setIsEditing: setIsEditing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n  const EmptyState = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"channel-empty__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"channel-empty__first\",\n      children: \"This is the beginning of your chat history\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"channel-empty__first\",\n      children: \"Send messages, attachments, links, emojis, and more!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"channel__container\",\n    children: /*#__PURE__*/_jsxDEV(\"channel\", {\n      children: [/*#__PURE__*/_jsxDEV(ChannelInner, {\n        EmptyStateIndicator: EmptyState,\n        Message: (messageProps, i) => /*#__PURE__*/_jsxDEV(TeamMessage, { ...messageProps\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChannelInner, {\n        setIsEditing: setIsEditing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChannelContainer, \"aVZdlyrQkOtjx//PZmUgT7ofHzg=\", false, function () {\n  return [useChatContext];\n});\n\n_c = ChannelContainer;\nexport default ChannelContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChannelContainer\");","map":{"version":3,"sources":["/workspace/Texter/client/src/components/ChannelContainer.jsx"],"names":["React","useChatContext","ChannelInner","CreateChannel","EditChannel","TeamMessage","ChannelContainer","isCreating","setIsCreating","isEditing","setIsEditing","createType","channel","EmptyState","messageProps","i"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,SAAQC,YAAR,EAAsBC,aAAtB,EAAqCC,WAArC,EAAkDC,WAAlD,QAAoE,IAApE;;;AAEA,MAAMC,gBAAgB,GAAG,QAAwE;AAAA;;AAAA,MAAvE;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,aAAd;AAA6BC,IAAAA,SAA7B;AAAwCC,IAAAA,YAAxC;AAAsDC,IAAAA;AAAtD,GAAuE;AAC/F,QAAM;AAACC,IAAAA;AAAD,MAAYX,cAAc,EAAhC;;AAEA,MAAGM,UAAH,EAAe;AACb,wBACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,6BACE,QAAC,aAAD;AACE,QAAA,UAAU,EAAEI,UADd;AAC0B,QAAA,aAAa,EAAEH;AADzC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AACD,MAAGC,SAAH,EAAc;AACZ,wBACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,6BACE,QAAC,WAAD;AACE,QAAA,YAAY,EAAEC;AADhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AACD,QAAMG,UAAU,GAAG,mBACjB;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA,4BACE;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,2BACI;AAAA,8BACE,QAAC,YAAD;AACI,QAAA,mBAAmB,EAAEA,UADzB;AAEI,QAAA,OAAO,EAAI,CAACC,YAAD,EAAeC,CAAf,kBAAqB,QAAC,WAAD,OAA2BD;AAA3B,WAAkBC,CAAlB;AAAA;AAAA;AAAA;AAAA;AAFpC;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,YAAD;AAAc,QAAA,YAAY,EAAEL;AAA5B;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAtCD;;GAAMJ,gB;UACcL,c;;;KADdK,gB;AAwCN,eAAeA,gBAAf","sourcesContent":["import React from 'react'\nimport { useChatContext } from 'stream-chat-react';\n\nimport {ChannelInner, CreateChannel, EditChannel, TeamMessage} from './';\n\nconst ChannelContainer = ({ isCreating, setIsCreating, isEditing, setIsEditing, createType }) => {\n  const {channel} = useChatContext();\n\n  if(isCreating) {\n    return (\n      <div className='channel__container'>\n        <CreateChannel \n          createType={createType} setIsCreating={setIsCreating}\n        />\n      </div>\n    )\n  }\n  if(isEditing) {\n    return(\n      <div className='channel__container'>\n        <EditChannel \n          setIsEditing={setIsEditing}\n        />\n      </div>\n    )\n  }\n  const EmptyState = () => (\n    <div className='channel-empty__container'>\n      <p className='channel-empty__first'>This is the beginning of your chat history</p>\n      <p className='channel-empty__first'>Send messages, attachments, links, emojis, and more!</p>\n    </div>\n  )\n  return (\n    <div className='channel__container'>\n        <channel>\n          <ChannelInner\n              EmptyStateIndicator={EmptyState}\n              Message = {(messageProps, i) => <TeamMessage key={i} { ... messageProps } />}\n          />\n          <ChannelInner setIsEditing={setIsEditing} />\n        </channel>\n    </div>\n  )\n}\n\nexport default ChannelContainer"]},"metadata":{},"sourceType":"module"}